#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef _WIN32
    #define CLEAR_SCREEN "cls"
#else
    #define CLEAR_SCREEN "clear"
#endif

// Structure to represent a bank account
typedef struct {
    char name[50];
    int accountNumber;
    float balance;
} BankAccount;

// Function prototypes
void checkBalance(BankAccount *account);
void deposit(BankAccount *account, float amount);
void withdraw(BankAccount *account, float amount);
void transfer(BankAccount *from, BankAccount *to, float amount);
void displayMenu();
void clearInputBuffer();

int main() {
    BankAccount user;
    BankAccount anotherUser = {"John Cena", 1002, 3000.0};
    int choice;
    float amount;

    printf("Enter your name: ");
    scanf("%49s", user.name);
    clearInputBuffer();
    user.accountNumber = 1001;
    user.balance = 5000.0;

    do {
        system(CLEAR_SCREEN);
        displayMenu();
        printf("Enter your choice: ");
        if (scanf("%d", &choice) != 1) {
            printf("Invalid input! Please enter a number.\n");
            clearInputBuffer();
            continue;
        }

        clearInputBuffer();

        switch (choice) {
            case 1:
                checkBalance(&user);
                break;
            case 2:
                printf("Enter deposit amount: ");
                if (scanf("%f", &amount) != 1 || amount <= 0) {
                    printf("Invalid input! Please enter a valid amount.\n");
                    clearInputBuffer();
                    continue;
                }
                deposit(&user, amount);
                break;
            case 3:
                printf("Enter withdrawal amount: ");
                if (scanf("%f", &amount) != 1 || amount <= 0) {
                    printf("Invalid input! Please enter a valid amount.\n");
                    clearInputBuffer();
                    continue;
                }
                withdraw(&user, amount);
                break;
            case 4:
                printf("Enter transfer amount: ");
                if (scanf("%f", &amount) != 1 || amount <= 0) {
                    printf("Invalid input! Please enter a valid amount.\n");
                    clearInputBuffer();
                    continue;
                }
                transfer(&user, &anotherUser, amount);
                break;
            case 5:
                printf("Thank you for using MND bank, %s!\n", user.name);
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }

        printf("\nPress Enter to continue...");
        clearInputBuffer();
        getchar();
    } while (choice != 5);

    return 0;
}

void displayMenu() {
    printf("\n===== MND Bank App =====\n");
    printf("1. Check Balance\n");
    printf("2. Deposit Money\n");
    printf("3. Withdraw Money\n");
    printf("4. Transfer Money\n");
    printf("5. Exit\n");
}

void checkBalance(BankAccount *account) {
    printf("\nAccount: %s (No: %d)\n", account->name, account->accountNumber);
    printf("Current Balance: $%.2f\n", account->balance);
}

void deposit(BankAccount *account, float amount) {
    if (amount > 0) {
        account->balance += amount;
        printf("$%.2f deposited successfully! New Balance: $%.2f\n", amount, account->balance);
    } else {
        printf("Invalid deposit amount!\n");
    }
}

void withdraw(BankAccount *account, float amount) {
    if (amount > 0 && amount <= account->balance) {
        account->balance -= amount;
        printf("$%.2f withdrawn successfully! New Balance: $%.2f\n", amount, account->balance);
    } else {
        printf("Invalid or insufficient funds!\n");
    }
}

void transfer(BankAccount *from, BankAccount *to, float amount) {
    if (amount > 0 && amount <= from->balance) {
        from->balance -= amount;
        to->balance += amount;
        printf("Transferred $%.2f from %s to %s\n", amount, from->name, to->name);
        printf("Your new balance: $%.2f\n", from->balance);
    } else {
        printf("Invalid transfer amount or insufficient funds!\n");
    }
}

void clearInputBuffer() {
    int c;
    while ((c = getchar()) != '\n' && c != EOF);
}

